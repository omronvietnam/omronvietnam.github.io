{"version":3,"sources":["../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/dist/Chart.js","../node_modules/moment/moment.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","inverse","a","bool","color","string","body","outline","className","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","Object","classes","createElement","ref","defaultProps","__webpack_exports__","CardBody","process","d","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","this","_this","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","element","undefined","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","values","destroy","render","_props3","id","onClick","Component","isRequired","number","arrayOf","propName","componentName","controllers","Error","display","position","_React$Component2","apply","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","module","exports","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","Array","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","result","prop","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","chartjsColor","noop","uid","isNullOrUndef","isArray","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS"],"mappings":"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","file":"static/js/3.c10efd0a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    _classCallCheck(this, ChartComponent);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this));\n\n    _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    };\n\n    _this.ref = function (element) {\n      _this.element = element;\n    };\n\n    _this.chartInstance = undefined;\n    return _this;\n  }\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type && next.data) {\n        // Be robust to no data. Relevant for other update mechanisms as in chartjs-plugin-streaming.\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});"],"sourceRoot":""}